{"D:\\AutomationQA\\HW17\\src\\calculator.ts":{"path":"D:\\AutomationQA\\HW17\\src\\calculator.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":28}},"2":{"start":{"line":8,"column":8},"end":{"line":10,"column":9}},"3":{"start":{"line":9,"column":12},"end":{"line":9,"column":46}},"4":{"start":{"line":14,"column":8},"end":{"line":16,"column":9}},"5":{"start":{"line":15,"column":12},"end":{"line":15,"column":46}},"6":{"start":{"line":20,"column":8},"end":{"line":22,"column":9}},"7":{"start":{"line":21,"column":12},"end":{"line":21,"column":46}},"8":{"start":{"line":26,"column":8},"end":{"line":28,"column":9}},"9":{"start":{"line":27,"column":12},"end":{"line":27,"column":46}},"10":{"start":{"line":32,"column":0},"end":{"line":32,"column":32}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":4},"end":{"line":5,"column":5}},"loc":{"start":{"line":5,"column":18},"end":{"line":5,"column":21}},"line":5},"1":{"name":"(anonymous_1)","decl":{"start":{"line":7,"column":4},"end":{"line":7,"column":5}},"loc":{"start":{"line":7,"column":55},"end":{"line":11,"column":5}},"line":7},"2":{"name":"(anonymous_2)","decl":{"start":{"line":13,"column":4},"end":{"line":13,"column":5}},"loc":{"start":{"line":13,"column":63},"end":{"line":17,"column":5}},"line":13},"3":{"name":"(anonymous_3)","decl":{"start":{"line":19,"column":4},"end":{"line":19,"column":5}},"loc":{"start":{"line":19,"column":60},"end":{"line":23,"column":5}},"line":19},"4":{"name":"(anonymous_4)","decl":{"start":{"line":25,"column":4},"end":{"line":25,"column":5}},"loc":{"start":{"line":25,"column":57},"end":{"line":29,"column":5}},"line":25}},"branchMap":{"0":{"loc":{"start":{"line":8,"column":8},"end":{"line":10,"column":9}},"type":"if","locations":[{"start":{"line":8,"column":8},"end":{"line":10,"column":9}},{"start":{"line":8,"column":8},"end":{"line":10,"column":9}}],"line":8},"1":{"loc":{"start":{"line":14,"column":8},"end":{"line":16,"column":9}},"type":"if","locations":[{"start":{"line":14,"column":8},"end":{"line":16,"column":9}},{"start":{"line":14,"column":8},"end":{"line":16,"column":9}}],"line":14},"2":{"loc":{"start":{"line":20,"column":8},"end":{"line":22,"column":9}},"type":"if","locations":[{"start":{"line":20,"column":8},"end":{"line":22,"column":9}},{"start":{"line":20,"column":8},"end":{"line":22,"column":9}}],"line":20},"3":{"loc":{"start":{"line":26,"column":8},"end":{"line":28,"column":9}},"type":"if","locations":[{"start":{"line":26,"column":8},"end":{"line":28,"column":9}},{"start":{"line":26,"column":8},"end":{"line":28,"column":9}}],"line":26}},"s":{"0":1,"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":2,"9":2,"10":1},"f":{"0":2,"1":2,"2":2,"3":2,"4":2},"b":{"0":[2,0],"1":[2,0],"2":[2,0],"3":[2,0]},"inputSourceMap":{"version":3,"file":"D:/AutomationQA/HW17/src/calculator.ts","sources":["D:/AutomationQA/HW17/src/calculator.ts"],"names":[],"mappings":";;;AAAA,MAAa,UAAU;IACnB,gBAAe,CAAC;IAAA,CAAC;IACV,YAAY,CAAC,WAAmB,EAAE,YAAoB,EAAE,SAAc;QACzE,IAAI,SAAS,IAAI,GAAG,EAAE;YAClB,OAAO,WAAW,GAAG,YAAY,CAAC;SACrC;IACL,CAAC;IAAA,CAAC;IACK,oBAAoB,CAAC,WAAmB,EAAE,YAAoB,EAAE,SAAc;QACjF,IAAI,SAAS,IAAI,GAAG,EAAE;YAClB,OAAO,WAAW,GAAG,YAAY,CAAC;SACrC;IACL,CAAC;IAAA,CAAC;IACK,iBAAiB,CAAC,WAAmB,EAAE,YAAoB,EAAE,SAAc;QAC9E,IAAI,SAAS,IAAI,GAAG,EAAE;YAClB,OAAO,WAAW,GAAG,YAAY,CAAC;SACrC;IACL,CAAC;IAAA,CAAC;IACK,cAAc,CAAC,WAAmB,EAAE,YAAoB,EAAE,SAAc;QAC3E,IAAI,SAAS,IAAI,GAAG,EAAE;YAClB,OAAO,WAAW,GAAG,YAAY,CAAC;SACrC;IACL,CAAC;IAAA,CAAC;CAEL;AAvBD,gCAuBC","sourcesContent":["export class Calculator {\r\n    constructor() {};\r\n    public numbersAdder(firstNumber: number, secondNumber: number, operation: '+') {\r\n        if (operation == '+') {\r\n            return firstNumber + secondNumber;  \r\n        }\r\n    };\r\n    public numbersSubtractioner(firstNumber: number, secondNumber: number, operation: '-') {\r\n        if (operation == '-') {\r\n            return firstNumber - secondNumber;  \r\n        }\r\n    };\r\n    public numbersMultiplier(firstNumber: number, secondNumber: number, operation: '*') {\r\n        if (operation == '*') {\r\n            return firstNumber * secondNumber;  \r\n        }\r\n    };\r\n    public numbersDivider(firstNumber: number, secondNumber: number, operation: '/') {\r\n        if (operation == '/') {\r\n            return firstNumber / secondNumber;  \r\n        }\r\n    };\r\n\r\n}\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"ace28691a6637e17e2cf1c2fcfbbf0b08391c588","contentHash":"b0ed7d5d8f2e45b3958dd8fa88c46600cca9cb55bd0d16c50aebc183ce15922a"}}